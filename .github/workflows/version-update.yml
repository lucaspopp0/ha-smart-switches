name: version-update

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      BOT_APP_ID:
        required: true
      BOT_APP_PRIVATE_KEY:
        required: true
    outputs:
      current-version:
        value: ${{ jobs.bump-version.outputs.current-version }}
      next-major-tag:
        value: ${{ jobs.bump-version.outputs.next-major-tag }}
      next-minor-tag:
        value: ${{ jobs.bump-version.outputs.next-minor-tag }}
      next-patch-tag:
        value: ${{ jobs.bump-version.outputs.next-patch-tag }}
      next-incrm-tag:
        value: ${{ jobs.bump-version.outputs.next-incrm-tag }}
      change:
        value: ${{ jobs.bump-version.outputs.change }}
      update-sha:
        value: ${{ jobs.bump-version.outputs.update-sha }}

permissions:
  contents: write
  id-token: write
  pull-requests: read

jobs:

  bump-version:
    runs-on: ubuntu-latest
    outputs:
      current-version: ${{ steps.config-version.outputs.version }}
      next-major-tag: ${{ steps.outputs.outputs.major_tag }}
      next-minor-tag: ${{ steps.outputs.outputs.minor_tag }}
      next-patch-tag: ${{ steps.outputs.outputs.patch_tag }}
      next-incrm-tag: ${{ steps.outputs.outputs.incrm_tag }}
      change: ${{ steps.outputs.outputs.change }}
      update-sha: ${{ steps.commit.outputs.commit-hash }}
    steps:
      -
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Read version from config.yml
        id: config-version
        run: |
          CONFIG_VERSION=$(yq '.version' ./smart-switches/config.yml)
          echo "version=$CONFIG_VERSION" | tee -a "$GITHUB_OUTPUT"
      -
        name: Determine version format
        id: version-format
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          VERSION_FORMAT='${major}.${minor}.${patch}.${increment}'
          PRERELEASE_MODE=true
          
          if [[ "$GITHUB_EVENT_NAME" == "push" ]]; then
            VERSION_FORMAT='${major}.${minor}.${patch}'
            PRERELEASE_MODE=false
          elif [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            VERSION_FORMAT='${major}.${minor}.${patch}-pr'"${PR_NUMBER}"'-${increment}'
          fi

          echo "version_format=$VERSION_FORMAT" | tee -a "$GITHUB_OUTPUT"
          echo "prerelease_mode=$PRERELEASE_MODE" | tee -a "$GITHUB_OUTPUT"
      -
        name: Compute next version
        id: version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: v
      -
        name: Construct outputs
        id: outputs
        run: |
          LATEST_MAJOR="${{ steps.version.outputs.major }}"
          LATEST_MINOR="${LATEST_MAJOR}.${{ steps.version.outputs.major }}"
          LATEST_PATCH="${LATEST_MINOR}.${{ steps.version.outputs.major }}"
          LATEST_INCRM="${LATEST_PATCH}.${{ steps.version.outputs.increment }}"

          echo "major_tag=v$LATEST_MAJOR" | tee -a "$GITHUB_OUTPUT"
          echo "minor_tag=v$LATEST_MINOR" | tee -a "$GITHUB_OUTPUT"
          echo "patch_tag=v$LATEST_PATCH" | tee -a "$GITHUB_OUTPUT"
          echo "incrm_tag=v$LATEST_INCRM" | tee -a "$GITHUB_OUTPUT"
          
          if [[ "$LATEST_INCRM" == "${{ steps.config-version.outputs.version }}" ]]; then
            echo "change=false" | tee -a "$GITHUB_OUTPUT"
          else
            echo "change=true" | tee -a "$GITHUB_OUTPUT"
          fi
      -
        name: Update config.yml
        env:
          VERSION_TAG: ${{ steps.outputs.outputs.incrm_tag }}
        run: |
          WITHOUT_PREFIX="${VERSION_TAG#v}" \
            yq -i \
              '.version = env(WITHOUT_PREFIX)' \
              ./smart-switches/config.yml
      -
        name: Update config file
        uses: planetscale/ghcommit-action@v0.2.0
        id: commit
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          commit_message: "[bot] ${{ steps.outputs.outputs.tag }}"
          repo: ${{ github.repository }}
          branch: ${{ github.head_ref || github.ref_name }}
      -
        uses: actions/checkout@v4
        with:
          ref: ${{ steps.commit.outputs.commit-hash }}
      - 
        name: Tag commit
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

          git tag \
            -m "${{ steps.outputs.outputs.tag }}" \
            "${{ steps.outputs.outputs.tag }}"

          git push --tags
      -
        name: Release
        env:
          TAG: ${{ steps.outputs.outputs.incr_tag }}
          RELEASE: ${{ steps.outputs.outputs.patch_tag }}
        run: |
          if [[ gh release view "${RELEASE}" > /dev/null ]]; then
            gh release delete "${RELEASE}" -y
          fi

          gh release create \
            ${{ steps.version.outputs.previous_version }} \
            --title "${RELEASE}" \
            --generate-notes --notes-start-tag "${TAG}"
