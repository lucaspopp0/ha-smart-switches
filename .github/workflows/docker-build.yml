name: docker-build

on:
  workflow_call:
    inputs:
      push:
        type: boolean
        default: false
      rebuild-server:
        type: boolean
        default: false
      rebuild-site:
        type: boolean
        default: false
    secrets:
      DOCKER_USER:
        required: false
      DOCKER_TOKEN:
        required: false

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:

  docker-build:
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@v4
      -
        name: Read version from config.yml
        id: config-version
        run: |
          CONFIG_VERSION=$(yq '.version' ./smart-switches/config.yml)
          echo "version=$CONFIG_VERSION" | tee -a "$GITHUB_OUTPUT"
      -
        name: Determine version format
        id: version-format
        env:
          PR_NUMBER: ${{ github.event.number }}
        run: |
          VERSION_FORMAT='${major}.${minor}.${patch}'
          PRERELEASE_MODE=true
          
          if [[ "$GITHUB_EVENT_NAME" == "push" ]]; then
            VERSION_FORMAT='${major}.${minor}.${patch}'
            PRERELEASE_MODE=false
          elif [[ "$GITHUB_EVENT_NAME" == "pull_request" ]]; then
            VERSION_FORMAT="pr${PR_NUMBER}"'-${increment}'
          fi

          echo "version_format=$VERSION_FORMAT" | tee -a "$GITHUB_OUTPUT"
          echo "prerelease_mode=$PRERELEASE_MODE" | tee -a "$GITHUB_OUTPUT"
      -
        name: Bump version
        id: version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: ""
          version_format: ${{ steps.version-format.outputs.version_format }}
          enable_prerelease_mode: ${{ steps.version-format.outputs.prerelease_mode }}
      -
        if: ${{ inputs.push }}
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}
      -
        uses: actions/setup-go@v5
        with:
          go-version-file: smart-switches/server/go.mod
          cache-dependency-path: smart-switches/server/go.sum
      -
        if: ${{ inputs.rebuild-server }}
        name: Re-generate server openapi spec
        working-directory: smart-switches/server
        run: |
          # Cleanup the spec folder
          rm -rf spec
          mkdir spec

          go run . get-openapi \
            | yq -o=yaml '.' \
            > spec/openapi.yaml
      -
        if: ${{ inputs.rebuild-site }}
        uses: actions/setup-node@v4
        with:
          node-version-file: smart-switches/site/.nvmrc
          cache-dependency-path: smart-switches/site/package-lock.json
          cache: npm
      -
        if: ${{ inputs.rebuild-site }}
        name: Install site dependencies
        working-directory: smart-switches/site
        run: |
          npm ci
      -
        if: ${{ inputs.rebuild-site }}
        name: Re-generate server sdk
        working-directory: smart-switches/site
        run: |
          if [[ ! -d src/api ]]; then
            mkdir src/api
          fi

          npx openapi-typescript \
            ../server/spec/openapi.yaml \
            -o ./src/api/index.d.ts
      -
        if: ${{ inputs.rebuild-site }}
        name: Restore Gatsby cache
        id: restore-gatsby-cache
        uses: actions/cache/restore@v4
        with:
          path: smart-switches/site/.cache
          key: gatsby-cache-${{ hashFiles('smart-switches/site/package-lock.json', 'smart-switches/site/src') }}
      -
        if: ${{ inputs.rebuild-site }}
        name: Build site
        working-directory: smart-switches/site
        run: |
          rm -rf public
          npm run build
      -
        name: Update version
        if: ${{ github.event_name == 'push' }}
        run: |
          yq -i \
            '.version = "${{ steps.version.outputs.version }}"' \
            smart-switches/config.yml
      -
        name: Check for generated changes
        id: detect-changes
        run: |
          git add .
          git status

          if [[ -n "$(git status -s)" ]]; then
            echo "changes=true" | tee -a "$GITHUB_OUTPUT"
          else
            echo "changes=false" | tee -a "$GITHUB_OUTPUT"
          fi      
      -
        name: Save Gatsby cache
        if: ${{ always() && steps.restore-gatsby-cache.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          key: ${{ steps.restore-gatsby-cache.outputs.cache-primary-key }}
          path: smart-switches/site/.cache
      -
        uses: actions/create-github-app-token@v1
        if: ${{ steps.detect-changes.outputs.changes == 'true' }}
        id: app-token
        with:
          app-id: ${{ secrets.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_APP_PRIVATE_KEY }}
      -
        name: Commit changes
        if: ${{ steps.detect-changes.outputs.changes == 'true' }}
        uses: planetscale/ghcommit-action@v0.2.0
        env:
          GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
        with:
          commit_message: "[bot] generate"
          repo: ${{ github.repository }}
          branch: ${{ github.head_ref || github.ref_name }}
      -
        name: go build
        working-directory: smart-switches/server
        env:
          GOARCH: arm64
          CGO_ENABLED: 0
        run: |
          go build -o server .
      -
        name: Set version
        id: pick-version
        run: |
          yq \
            -i \
            '.version = "${{ github.sha }}"' \
            smart-switches/config.yml
      -
        name: Build and publish
        uses: home-assistant/builder@master
        with:
          args: |
            --addon \
            ${{ inputs.push && '' || '--test ' }} \
            --target smart-switches \
            --docker-hub lucaspopp0 \
            --image ha-smart-switches \
            --version "pr${{ github.event.number }}" \
            --aarch64
